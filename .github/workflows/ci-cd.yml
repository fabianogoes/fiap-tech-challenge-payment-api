name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

env:
  DOCKER_HUB_REPOSITORY: payment-api
  INFRA_DIRECTORY: .infra/
  EKS_DIRECTORY: .infra/kubernetes/

jobs:
  test_coverage:
    name: Go test coverage check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3

      - name: generate test coverage
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./...

      - name: check test coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          # Configure action using config file (option 1)
          config: ./.testcoverage.yml

          # Configure action by specifying input parameters individually (option 2).
          # If you are using config file (option 1) you shouldn't use these parameters, however
          # specifing these action parameters will override appropriate config values.
#          profile: cover.out
#          local-prefix: github.com/org/project
#          threshold-file: 80
#          threshold-package: 80
#          threshold-total: 95

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: code_coverage
    permissions:
      packages: write
      contents: write
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: "${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}"

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "::set-output name=docker_tag::${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:$calculatedSha"

      - name: Confirm git commit SHA output
        run: |
          echo ${{ steps.vars.outputs.short_sha }}
          echo ${{ steps.vars.outputs.docker_tag }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.vars.outputs.docker_tag }}


#  deploy:
#    name: Deploy Kubernetes
#    runs-on: ubuntu-latest
#    permissions:
#      packages: write
#      contents: write
#      attestations: write
#    steps:
#      - name: Configure AWS Credentials for GitHub Actions
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-region: ${{ secrets.AWS_REGION }}
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
#          lambda_layer_publish: true
#      - name: AWS get-caller-identity
#        run: |
#          aws sts get-caller-identity
#
#      - name: Set up Kubectl
#        uses: azure/k8s-set-context@v1
#        with:
#          kubeconfig: ${{ secrets.KUBECONFIG }}
#
#      - name: EKS apply secrets
#        run: |
#          kubectl apply -f ${{ env.EKS_DIRECTORY }}secrets.yaml
#
#      - name: EKS apply deployment
#        run: |
#          sed -i "s|image:.*|image: ${{ steps.vars.outputs.docker_tag }}|g" ${{ env.EKS_DIRECTORY }}deployment.yaml
#          kubectl apply -f ${{ env.EKS_DIRECTORY }}deployment.yaml
#
#      - name: EKS apply hpa
#        run: |
#          kubectl apply -f ${{ env.EKS_DIRECTORY }}hpa.yaml
#
#      - name: EKS apply service
#        run: |
#          kubectl apply -f ${{ env.EKS_DIRECTORY }}service.yaml
